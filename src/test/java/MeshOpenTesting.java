import Engine.Graphics.Camera;
import Engine.Graphics.Mesh.Mesh;
import Engine.Graphics.Shaders.ShaderProgram;
import System.FileManagers.MeshFileManager;
import System.FileManagers.ShaderFileManager;
import org.joml.Matrix4f;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import java.io.File;

import static org.lwjgl.glfw.GLFW.*;

public class MeshOpenTesting {


    @BeforeAll
    static void start()
    {





    }

    @Test
    void completeTest()
    {
        long window = isolateProgramHelper.setUpGenericWindow();

        File file = MeshFileManager.getInstance().getModelFromResources("horsie.obj");

        Mesh myMesh = Mesh.loadMesh(file);

        File v = ShaderFileManager.getInstance().getVertexShader("basicvert.glsl");
        File f = ShaderFileManager.getInstance().getFragShader("basicfrag.glsl");

        ShaderProgram shaderProgram = new ShaderProgram(v, f);

        shaderProgram.use();

        Camera sceneCam = new Camera(80, 1, 0.001f, 1000.0f);

        Matrix4f perspectiveMatrix = sceneCam.getProjectionMatrix();

        float[] modelMat = new float[16];
        modelMat[0] = 0.2f;
        modelMat[5] = 0.2f;
        modelMat[10] = 0.2f;
        modelMat[15] = 1.0f;

        sceneCam.setPosition(.0f, -1.67f, 1.0f);

        sceneCam.rotate(0.0f, -45.3f, 0.0f);

        shaderProgram.setUniform("modelMatrix", modelMat);
        shaderProgram.setUniform4fv("viewMatrix", sceneCam.getViewMatrix());
        shaderProgram.setUniform4fv("projectionMatrix", sceneCam.getProjectionMatrix());



        myMesh.render();



        int error = glfwGetError(null);
        Assertions.assertEquals(GLFW_NO_ERROR, error, "GLFW encountered an error.");

        shaderProgram.stop();

        glfwSwapBuffers(window);

        int saveID = isolateProgramHelper.renderToTexture(myMesh, shaderProgram, 800, 800);

        isolateProgramHelper.saveTextureToFile(saveID, "saver.png");

        isolateProgramHelper.closeGenericWindow(window);


        System.out.println("completes");
    }
}
